import { TransformVisitor, SimpleParser } from "../index.js";
import { IdentifierExpression } from "assemblyscript/dist/assemblyscript.js";
import { not, isLibrary } from '../utils.js';
class FunctionCallTransform extends TransformVisitor {
    visitCallExpression(node) {
        if (node.expression instanceof IdentifierExpression) {
            if (node.expression.text == "foo") {
                let res = SimpleParser.parseExpression('"hello world"');
                res.range = node.range;
                return res;
            }
        }
        return super.visitCallExpression(node);
    }
    afterParse(_) {
        let sources = _.sources.filter(not(isLibrary));
        this.visit(sources);
    }
}
export default new FunctionCallTransform();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25DYWxsVHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2V4YW1wbGVzL2Z1bmN0aW9uQ2FsbFRyYW5zZm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdELE9BQU8sRUFBNEMsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN2SCxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU3QyxNQUFNLHFCQUFzQixTQUFRLGdCQUFnQjtJQUNsRCxtQkFBbUIsQ0FBQyxJQUFvQjtRQUN0QyxJQUFJLElBQUksQ0FBQyxVQUFVLFlBQVksb0JBQW9CLEVBQUM7WUFDbEQsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksSUFBSSxLQUFLLEVBQUU7Z0JBQ2pDLElBQUksR0FBRyxHQUFHLFlBQVksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLENBQUM7Z0JBQ3hELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDdkIsT0FBTyxHQUFHLENBQUM7YUFDWjtTQUNGO1FBQ0QsT0FBTyxLQUFLLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELFVBQVUsQ0FBQyxDQUFTO1FBQ2xCLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEIsQ0FBQztDQUNGO0FBRUQsZUFBZSxJQUFJLHFCQUFxQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc2Zvcm1WaXNpdG9yLCBTaW1wbGVQYXJzZXIgfSBmcm9tIFwiLi4vaW5kZXguanNcIjtcbmltcG9ydCB7IE5vZGUsIEV4cHJlc3Npb24sIFBhcnNlciwgQ2FsbEV4cHJlc3Npb24sIElkZW50aWZpZXJFeHByZXNzaW9uIH0gZnJvbSBcImFzc2VtYmx5c2NyaXB0L2Rpc3QvYXNzZW1ibHlzY3JpcHQuanNcIjtcbmltcG9ydCB7IG5vdCwgaXNMaWJyYXJ5IH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuXG5jbGFzcyBGdW5jdGlvbkNhbGxUcmFuc2Zvcm0gZXh0ZW5kcyBUcmFuc2Zvcm1WaXNpdG9yIHtcbiAgdmlzaXRDYWxsRXhwcmVzc2lvbihub2RlOiBDYWxsRXhwcmVzc2lvbik6IEV4cHJlc3Npb24ge1xuICAgIGlmIChub2RlLmV4cHJlc3Npb24gaW5zdGFuY2VvZiBJZGVudGlmaWVyRXhwcmVzc2lvbil7XG4gICAgICBpZiAobm9kZS5leHByZXNzaW9uLnRleHQgPT0gXCJmb29cIikge1xuICAgICAgICBsZXQgcmVzID0gU2ltcGxlUGFyc2VyLnBhcnNlRXhwcmVzc2lvbignXCJoZWxsbyB3b3JsZFwiJyk7XG4gICAgICAgIHJlcy5yYW5nZSA9IG5vZGUucmFuZ2U7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdXBlci52aXNpdENhbGxFeHByZXNzaW9uKG5vZGUpO1xuICB9XG5cbiAgYWZ0ZXJQYXJzZShfOiBQYXJzZXIpOiB2b2lkIHtcbiAgICBsZXQgc291cmNlcyA9IF8uc291cmNlcy5maWx0ZXIobm90KGlzTGlicmFyeSkpO1xuICAgIHRoaXMudmlzaXQoc291cmNlcyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IEZ1bmN0aW9uQ2FsbFRyYW5zZm9ybSgpO1xuIl19