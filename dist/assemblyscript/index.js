"use strict";
//@ts-ignore
const path = require("path");
//@ts-ignore
let assemblyscriptPath = Object.getOwnPropertyNames(require.cache).filter(s => s.endsWith("assemblyscript.js"))[0];
let transformerPath;
if (assemblyscriptPath) {
    let splitPath = assemblyscriptPath.split(path.sep).slice(0, -2);
    transformerPath = splitPath.concat(["cli", "transform"]).join(path.sep);
}
else {
    assemblyscriptPath = require.resolve("assemblyscript");
    transformerPath = require.resolve("assemblyscript/cli/transform");
}
const assemblyscript = require(assemblyscriptPath);
//@ts-ignore
module.exports.Transform = require(transformerPath).Transform;
module.exports = Object.assign(Object.assign(Object.assign({}, module.exports), assemblyscript), assemblyscript.util // Need to add because newer version adds namespace
);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXNzZW1ibHlzY3JpcHQvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVk7QUFDWixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFN0IsWUFBWTtBQUNaLElBQUksa0JBQWtCLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuSCxJQUFJLGVBQWUsQ0FBQztBQUNwQixJQUFJLGtCQUFrQixFQUFFO0lBQ3RCLElBQUksU0FBUyxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLGVBQWUsR0FBSSxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUUsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMzRTtLQUFNO0lBQ0wsa0JBQWtCLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3ZELGVBQWUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLDhCQUE4QixDQUFDLENBQUM7Q0FDbkU7QUFDRCxNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUVuRCxZQUFZO0FBQ1osTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztBQUM5RCxNQUFNLENBQUMsT0FBTyxpREFDTyxNQUFNLENBQUMsT0FBTyxHQUNkLGNBQWMsR0FDZCxjQUFjLENBQUMsSUFBSSxDQUFDLG1EQUFtRDtDQUMzRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy9AdHMtaWdub3JlXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5cbi8vQHRzLWlnbm9yZVxubGV0IGFzc2VtYmx5c2NyaXB0UGF0aCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHJlcXVpcmUuY2FjaGUpLmZpbHRlcihzID0+IHMuZW5kc1dpdGgoXCJhc3NlbWJseXNjcmlwdC5qc1wiKSlbMF07XG5sZXQgdHJhbnNmb3JtZXJQYXRoO1xuaWYgKGFzc2VtYmx5c2NyaXB0UGF0aCkge1xuICBsZXQgc3BsaXRQYXRoID0gYXNzZW1ibHlzY3JpcHRQYXRoLnNwbGl0KHBhdGguc2VwKS5zbGljZSgwLCAtMik7XG4gIHRyYW5zZm9ybWVyUGF0aCA9ICBzcGxpdFBhdGguY29uY2F0KFsgXCJjbGlcIiwgXCJ0cmFuc2Zvcm1cIl0pLmpvaW4ocGF0aC5zZXApO1xufSBlbHNlIHtcbiAgYXNzZW1ibHlzY3JpcHRQYXRoID0gcmVxdWlyZS5yZXNvbHZlKFwiYXNzZW1ibHlzY3JpcHRcIik7XG4gIHRyYW5zZm9ybWVyUGF0aCA9IHJlcXVpcmUucmVzb2x2ZShcImFzc2VtYmx5c2NyaXB0L2NsaS90cmFuc2Zvcm1cIik7XG59XG5jb25zdCBhc3NlbWJseXNjcmlwdCA9IHJlcXVpcmUoYXNzZW1ibHlzY3JpcHRQYXRoKTtcblxuLy9AdHMtaWdub3JlXG5tb2R1bGUuZXhwb3J0cy5UcmFuc2Zvcm0gPSByZXF1aXJlKHRyYW5zZm9ybWVyUGF0aCkuVHJhbnNmb3JtO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgICAgICAgICAgICAgICAuLi5tb2R1bGUuZXhwb3J0cyxcbiAgICAgICAgICAgICAgICAgIC4uLmFzc2VtYmx5c2NyaXB0LFxuICAgICAgICAgICAgICAgICAgLi4uYXNzZW1ibHlzY3JpcHQudXRpbCAvLyBOZWVkIHRvIGFkZCBiZWNhdXNlIG5ld2VyIHZlcnNpb24gYWRkcyBuYW1lc3BhY2VcbiAgICAgICAgICAgICAgICB9OyJdfQ==